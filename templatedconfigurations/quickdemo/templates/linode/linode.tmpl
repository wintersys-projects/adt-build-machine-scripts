#!/bin/sh

################################################################################################
# This script is a preparatory script for your build machine. Your build machine is the machine
# that is responsible for initiating the build process of your server fleet. 
# As a minimum you will need a copy of this script with the following dynamic or changeable values 
# set:
#
#   BUILDMACHINE_USER
#   BUILDMACHINE_PASSWORD
#   BUILDMACHINE_SSH_PORT
#   LAPTOP_IP
#   SSH
#
# You will then need to pass a copy of the entire script with these values set to the "user data"
# area of the build machine you are provisioning. How to do this will vary by provider.
# Once your build machine is provisioned you can SSH onto it in a way similar to this:
#
#     > ssh -i <ssh-private-key> -p ${BUILDMACHINE_SSH_PORT} ${BUILDMACHINE_USER}@<buildmachineip>
#     > sudo su
#     > password:${BUILDMACHINE_PASSWORD}
#     > cd adt-build-machine-scripts
#
#################################################################################################
#
##################################################################################################################################################
# If you are deploying Quick Demos at a minimum you need to set all the values to custom values specific to your deployment in sections 1, 2 and 3
##################################################################################################################################################
#SECTION 1 - replace all "CUSTOMISE ME" tokens with your own values before pasting this script into the user-data area of a new linode
######################################################################################################################################

export BUILDMACHINE_USER="####CUSTOMISE ME####"
export BUILDMACHINE_PASSWORD="####CUSTOMISE ME####" #Make sure any password you choose is strong enough to pass any strength enforcement rules of your OS
export BUILDMACHINE_SSH_PORT="####CUSTOMISE ME####"
export LAPTOP_IP="####CUSTOMISE ME####"

######################################################################################################################################
#SECTION 2 - replace all "CUSTOMISE ME" tokens with your own values before pasting this script into the user-data area of a new linode
######################################################################################################################################

/bin/echo '
#BASE OVERRIDES
export SSH="####CUSTOMISE ME####" #paste your public key here
export SELECTED_TEMPLATE="####CUSTOMISE ME####" #set if using hardcore build (1 for virgin, 2 for baseline, 3 for temporal)
' > /root/Environment.env

#######################################################################################################################################
#SECTION 3 - replace all "CUSTOMISE ME" tokens with your own values before pasting this script into the user-data area of a new linode
#######################################################################################################################################

/bin/echo '
export S3_ACCESS_KEY="####CUSTOMISE ME####"
export S3_SECRET_KEY="####CUSTOMISE ME####"
export TOKEN="####CUSTOMISE ME####"
export CLOUDHOST_ACCOUNT_ID="####CUSTOMISE ME####"
export DNS_USERNAME="####CUSTOMISE ME####"
export DNS_SECURITY_KEY="####CUSTOMISE ME####"
export WEBSITE_NAME="####CUSTOMISE ME####"
export WEBSITE_URL="####CUSTOMISE ME####"


######################################################################################################
#SECTION 4 - If you know what you are doing you can customise these values to your taste/requirements (in most cases the quick demos
#            will ask you to customise a few of them. 
#####################################################################################################

export WEBSITE_DISPLAY_NAME="Demo Application"
export APPLICATION="joomla"
export APPLICATION_BASELINE_SOURCECODE_REPOSITORY="communitybuilder-webroot-sourcecode-baseline"
export BASELINE_DB_REPOSITORY="communitybuilder-db-baseline"
export BUILD_ARCHIVE_CHOICE="baseline"
export JOOMLA_VERSION="5.3.2"
export DRUPAL_VERSION="11.2.2"
export PHP_VERSION="8.4"
export DNS_CHOICE="linode"
export BUILD_IDENTIFIER="test-build"
export VPC_IP_RANGE="10.0.1.0/24"
export APPLICATION_LANGUAGE="PHP"
export APPLICATION_NAME="Demo Application"
export S3_HOST_BASE="gb-lon-1.linodeobjects.com"
export S3_LOCATION="US"
export DATASTORE_CHOICE="linode"
export DIRECTORIES_TO_MOUNT=""
export PERSIST_ASSETS_TO_DATASTORE="0"
export BUILDOS="debian"
export BUILDOS_VERSION="12"
export WEBSERVER_CHOICE="NGINX"
export REVERSE_PROXY_WEBSERVER="NGINX"
export MOD_SECURITY="0"
export GIT_USER="Templated User"
export GIT_EMAIL_ADDRESS="templateduser@dummyemailZ123.com"
export INFRASTRUCTURE_REPOSITORY_PROVIDER="github"
export INFRASTRUCTURE_REPOSITORY_OWNER="wintersys-projects"
export INFRASTRUCTURE_REPOSITORY_USERNAME="wintersys-projects"
export INFRASTRUCTURE_REPOSITORY_PASSWORD="none"
export APPLICATION_REPOSITORY_PROVIDER="github"
export APPLICATION_REPOSITORY_OWNER="adt-demos"
export APPLICATION_REPOSITORY_USERNAME="adt-demos"
export APPLICATION_REPOSITORY_PASSWORD=""
export APPLICATION_REPOSITORY_TOKEN=""
export SYSTEM_EMAIL_PROVIDER=""
export SYSTEM_TOEMAIL_ADDRESS=""
export SYSTEM_FROMEMAIL_ADDRESS=""
export SYSTEM_EMAIL_USERNAME=""
export SYSTEM_EMAIL_PASSWORD=""
export EMAIL_NOTIFICATION_LEVEL="ERROR"
export DB_PORT="2035"
export DATABASE_INSTALLATION_TYPE="Maria"
export DATABASE_DBaaS_INSTALLATION_TYPE=""
export BYPASS_DB_LAYER="0"
export REGION="gb-lon"
export DB_SERVER_TYPE="g6-nanode-1"
export WS_SERVER_TYPE="g6-nanode-1"
export AS_SERVER_TYPE="g6-nanode-1"
export AUTH_SERVER_TYPE="g6-nanode-1"
export RP_SERVER_TYPE="g6-nanode-1"
export CLOUDHOST="linode"
export MACHINE_TYPE="LINODE"
export SSH_PORT="1035"
export SERVER_TIMEZONE_CONTINENT="Europe"
export SERVER_TIMEZONE_CITY="London"
export USER="root"
export SYNC_WEBROOTS="0"
export USER_EMAIL_DOMAIN=""
export PRODUCTION="0"
export DEVELOPMENT="1"
export NO_AUTOSCALERS="0"
export NO_REVERSE_PROXY="0"
export NO_WEBSERVERS="1"
export MAX_WEBSERVERS="10"
export BUILD_FROM_SNAPSHOT="0"
export ACTIVE_FIREWALLS="3"
export PUBLIC_KEY_NAME="AGILE_TOOLKIT_PUBLIC_KEY"
export SSL_GENERATION_METHOD="AUTOMATIC"
export SSL_GENERATION_SERVICE="LETSENCRYPT"
export SSL_LIVE_CERT="1"
export ALGORITHM="ed25519"
export BUILD_MACHINE_VPC="1"
export VPC_NAME="adt-vpc"
export AUTHENTICATION_SERVER="0"
export AUTH_SERVER_URL=""
export AUTH_DNS_USERNAME=""
export AUTH_DNS_SECURITY_KEY=""
export AUTH_DNS_CHOICE="cloudflare"
export MULTI_REGION="0"
export PRIMARY_REGION="0"
export DBaaS_PUBLIC_ENDPOINT=""
export INPARALLEL="0"
  ' >> /root/Environment.env

. /root/Environment.env

#XXXSTACKYYY

#set -x

OUT_FILE="buildmachine-out-`/bin/date | /bin/sed 's/ //g'`"
exec 1>>/root/${OUT_FILE}
ERR_FILE="buildmachine-err-`/bin/date | /bin/sed 's/ //g'`"
exec 2>>/root/${ERR_FILE}

/usr/sbin/adduser --disabled-password --gecos "" ${BUILDMACHINE_USER} 
/bin/sed -i '$ a\ ClientAliveInterval 60\nTCPKeepAlive yes\nClientAliveCountMax 10000' /etc/ssh/sshd_config
/bin/echo ${BUILDMACHINE_USER}:${BUILDMACHINE_PASSWORD} | /usr/bin/sudo -S -E /usr/sbin/chpasswd 
 /usr/bin/gpasswd -a ${BUILDMACHINE_USER} sudo 

/bin/mkdir -p /home/${BUILDMACHINE_USER}/.ssh
/bin/echo "${SSH}" >> /home/${BUILDMACHINE_USER}/.ssh/authorized_keys

/usr/bin/find /etc/ssh -name '*' -type f -exec sed -i 's/^PasswordAuthentication.*/PasswordAuthentication no/g' {} +
/usr/bin/find /etc/ssh -name '*' -type f -exec sed -i 's/^#PasswordAuthentication.*/PasswordAuthentication no/g' {} +
/usr/bin/find /etc/ssh -name '*' -type f -exec sed -i 's/^PermitRootLogin.*/PermitRootLogin no/g' {} +
/usr/bin/find /etc/ssh -name '*' -type f -exec sed -i 's/^#PermitRootLogin.*/PermitRootLogin no/g' {} +
/usr/bin/find /etc/ssh -name '*' -type f -exec sed -i 's/^KbdInteractiveAuthentication.*/KbdInteractiveAuthentication no/g' {} +
/usr/bin/find /etc/ssh -name '*' -type f -exec sed -i 's/^#KbdInteractiveAuthentication.*/KbdInteractiveAuthentication no/g' {} +
/usr/bin/find /etc/ssh -name '*' -type f -exec sed -i 's/^ChallengeResponseAuthentication.*/ChallengeResponseAuthentication no/g' {} +
/usr/bin/find /etc/ssh -name '*' -type f -exec sed -i 's/^#ChallengeResponseAuthentication.*/ChallengeResponseAuthentication no/g' {} +
/usr/bin/find /etc/ssh -name '*' -type f -exec sed -i 's/^AddressFamily.*/AddressFamily inet/g' {} +
/usr/bin/find /etc/ssh -name '*' -type f -exec sed -i 's/^#AddressFamily.*/AddressFamily inet/g' {} +


if ( [ "${BUILDMACHINE_SSH_PORT}" = "" ] )
then
        BUILDMACHINE_SSH_PORT="22"
fi

/bin/sed -i "s/^Port.*$/Port ${BUILDMACHINE_SSH_PORT}/g" /etc/ssh/sshd_config
/bin/sed -i "s/^#Port.*$/Port ${BUILDMACHINE_SSH_PORT}/g" /etc/ssh/sshd_config
/bin/echo "AllowUsers ${BUILDMACHINE_USER}" >> /etc/ssh/sshd_config

/usr/bin/apt-get -qq -y update
/usr/bin/apt-get -qq -y install git

cd /home/${BUILDMACHINE_USER}

if ( [ "${INFRASTRUCTURE_REPOSITORY_OWNER}" != "" ] )
then
        /usr/bin/git clone https://github.com/${INFRASTRUCTURE_REPOSITORY_OWNER}/adt-build-machine-scripts.git
else
        /usr/bin/git clone https://github.com/wintersys-projects/adt-build-machine-scripts.git
fi

/usr/bin/find /home/${BUILDMACHINE_USER} -type d -exec chmod 755 {} \;
/usr/bin/find /home/${BUILDMACHINE_USER} -type f -exec chmod 744 {} \;

export BUILD_HOME="/home/${BUILDMACHINE_USER}/adt-build-machine-scripts"
/bin/echo ${BUILD_HOME} > /home/buildhome.dat
/bin/sh ${BUILD_HOME}/helperscripts/RunServiceCommand.sh ssh restart
 
if ( [ ! -d ${BUILD_HOME}/runtimedata ] )
then
        /bin/mkdir -p ${BUILD_HOME}/runtimedata
fi
/bin/touch ${BUILD_HOME}/runtimedata/LAPTOPIP:${LAPTOP_IP}
/bin/touch ${BUILD_HOME}/runtimedata/BUILDMACHINEPORT:${BUILDMACHINE_SSH_PORT}

if ( [ "${BUILD_IDENTIFIER}" != "" ] )
then
        /bin/echo ${BUILD_IDENTIFIER} > ${BUILD_HOME}/runtimedata/ACTIVE_BUILD_IDENTIFIER
fi

/bin/sh ${BUILD_HOME}/installscripts/InstallFirewall.sh "`/bin/cat /etc/issue | /usr/bin/tr '[:upper:]' '[:lower:]' | /bin/egrep -o '(ubuntu|debian)'`"
${BUILD_HOME}/security/firewall/InitialiseFirewall.sh 


cd adt-build-machine-scripts

. ./HardcoreADTWrapper.sh
